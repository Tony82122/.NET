@page "/weather"
@using ApiContracts.DTOs
@using BlazorApp1.HttpServices
@attribute [StreamRendering]
@inject IPostService PostService

<PageTitle>Trending Posts</PageTitle>

<h1>Trending Posts</h1>

@if (_loading)
{
    <p>Loading...</p>
}
else if (_error != null)
{
    <div class="alert alert-danger" role="alert">
        @_error
    </div>
}
else if (_posts == null || !_posts.Any())
{
    <p>No posts found.</p>
}
else
{
    <div class="row">
        @foreach (var post in _posts)
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@post.Title</h5>
                        <p class="card-text">@post.Content</p>
                        <p class="card-text"><small class="text-muted">Created at: @post.CreatedAt.ToString("g")</small></p>
                        <p class="card-text">
                            <span class="badge bg-success">Upvotes: @post.UpVotes</span>
                            <span class="badge bg-danger">Downvotes: @post.DownVotes</span>
                        </p>
                        <p class="card-text"><small class="text-muted">User ID: @post.UserId</small></p>
                        @if (post.Comments != null && post.Comments.Any())
                        {
                            <h6>Comments:</h6>
                            <ul class="list-group list-group-flush">
                                @foreach (var comment in post.Comments.Take(3))
                                {
                                    <li class="list-group-item">
                                        <p>@comment.TextContent</p>
                                        <small class="text-muted">By User: @comment.UserId at @comment.CreatedAt.ToString("g")</small>
                                    </li>
                                }
                            </ul>
                            @if (post.Comments.Count > 3)
                            {
                                <p class="mt-2"><small>And @(post.Comments.Count - 3) more comments...</small></p>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<postDTO> _posts;
    private bool _loading = true;
    private string _error;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _posts = await PostService.GetPostsAsync();
        }
        catch (Exception ex)
        {
            _error = $"Error loading posts: {ex.Message}";
            Console.WriteLine(_error);
        }
        finally
        {
            _loading = false;
        }
    }
}