@page "/login"
@rendermode InteractiveServer
@using BlazorApp1.HttpEntities
@inject IAuthProvider AuthProvider
@inject NavigationManager NavManager

<PageTitle>Login</PageTitle>

<h1>Login</h1>

<div class="form-group">
    <label for="username">Username:</label>
    <input type="text" class="form-control" id="username" @bind="username"/>
</div>

<div class="form-group">
    <label for="password">Password:</label>
    <input type="password" class="form-control" id="password" @bind="password"/>
</div>

<button class="btn btn-primary" @onclick="LoginAsync">LOGIN</button>

@if (!string.IsNullOrEmpty(message))
{
    <p class="mt-3 @messageClass">@message</p>
}

@code {
    private string username = "";
    private string password = "";
    private string message = "";
    private string messageClass = "";

    private async Task LoginAsync()
    {
        try
        {
            await AuthProvider.LoginAsync(username, password);
            var authState = await AuthProvider.GetAuthenticationStateAsync();
            if (authState.User.Identity.IsAuthenticated)
            {
                NavManager.NavigateTo("/posts", forceLoad: true); // Ensuring the entire app is aware of the state change
            }
            else
            {
                message = "Failed. Please try again.";
                messageClass = "text-danger";
            }
        }
        catch (Exception ex)
        {
            message = $"Login failed: {ex.Message}";
            messageClass = "text-danger";
        }
    }
    
}